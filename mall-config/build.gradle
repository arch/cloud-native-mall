plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group = 'org.mall'
version = '1.0-SNAPSHOT'

description = 'Provides functionality for centralizing the application configuration.'

repositories {
    mavenCentral()
}

ext {
    set 'springCloudVersion', "2023.0.2"
    set 'otelVersion', '2.4.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-config-server'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly "io.opentelemetry.javaagent:opentelemetry-javaagent:${otelVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootBuildImage {
    builder = "paketobuildpacks/builder-jammy-base:latest"
    pullPolicy = "IF_NOT_PRESENT"
    bindings = ['/home/rigofunc/bindings:/platform/bindings', '/home/rigofunc/deps/:/deps/']
    imageName = "${project.name}"
    environment = ["BP_JVM_VERSION": "17", "BP_LOG_LEVEL": "DEBUG"]

    docker {
        publishRegistry {
            url = project.findProperty("registry")
            username = project.findProperty("username")
            password = project.findProperty("password")
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}