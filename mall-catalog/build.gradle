plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'org.mall'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

description = 'Provides functionality for managing the products in the catalog.'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set 'springCloudVersion', '2023.0.2'
    set 'testKeycloakVersion', "3.4.0"
    set 'otelVersion', '2.4.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly "io.opentelemetry.javaagent:opentelemetry-javaagent:${otelVersion}"

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation "com.github.dasniko:testcontainers-keycloak:${testKeycloakVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

springBoot {
    buildInfo()
}

gitProperties {
    failOnNoGitDirectory = false
}

bootRun {
    systemProperty "mall.testdata.enabled", "true"
}

// https://docs.spring.io/spring-boot/gradle-plugin/packaging-oci-image.html
bootBuildImage {
    builder = "paketobuildpacks/builder-jammy-base:latest"
    pullPolicy = "IF_NOT_PRESENT"
    // https://paketo.io/docs/howto/configuration/#building-behind-a-firewall
    bindings = ['/home/rigofunc/bindings:/platform/bindings', '/home/rigofunc/deps/:/deps/']
    imageName = "${project.name}"
    environment = ["BP_JVM_VERSION": "17", "BP_LOG_LEVEL": "DEBUG"]

    docker {
        publishRegistry {
            url = project.findProperty("registry")
            username = project.findProperty("username")
            password = project.findProperty("password")
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}